# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Declare a dependency on the welcome-orb
  welcome: circleci/welcome-orb@0.4.1
# Orchestrate or schedule a set of jobs
workflows:
  # Name the workflow "welcome"
  welcome:
    # Run the welcome/run job in its own container
    jobs:
      - welcome/run
      build: # runs not using Workflows must have a `build` job as entry point
        docker: # run the steps with Docker
          - image: circleci/test-circle-ci-laravel # ...with this image as the primary container; this is where all `steps` will run
        working_directory: ~/var/www/html/demo-circle-ci-and-deployer # directory where steps will run
        steps: # a set of executable commands
          - checkout # special step to check out source code to working directory
          - run: sudo apt install -y libsqlite3-dev zlib1g-dev
          - run: sudo docker-php-ext-install zip
          - run: sudo composer self-update
          - restore_cache: # special step to restore the dependency cache if `composer.lock` does not change
              keys:
                - composer-v1-{{ checksum "composer.lock" }}
                # fallback to using the latest cache if no exact match is found (See https://circleci.com/docs/2.0/caching/)
                - composer-v1-
          - run: composer install -n --prefer-dist
          - save_cache: # special step to save the dependency cache with the `composer.lock` cache key template
              key: composer-v1-{{ checksum "composer.lock" }}
              paths:
                - vendor
          - restore_cache: # special step to restore the dependency cache if `package-lock.json` does not change
              keys:
                - node-v1-{{ checksum "package-lock.json" }}
                # fallback to using the latest cache if no exact match is found (See https://circleci.com/docs/2.0/caching/)
                - node-v1-
          - run: yarn install
          - save_cache: # special step to save the dependency cache with the `package-lock.json` cache key template
              key: node-v1-{{ checksum "package-lock.json" }}
              paths:
                - node_modules
          - run: touch storage/testing.sqlite
          - run: php artisan migrate --env=testing --database=sqlite_testing --force
          - run: ./vendor/bin/codecept build
          - run: ./vendor/bin/codecept run
